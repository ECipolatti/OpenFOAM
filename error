In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C: In member function ‘virtual Foam::tmp<Foam::Field<Type> > Foam::cyclicAMIFvPatchField<Type>::patchNeighbourField() const’:
lnInclude/cyclicAMIFvPatchField.C:280:23: error: no match for ‘operator/’ (operand types are ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ and ‘Foam::vector {aka Foam::Vector<double>}’)
         result = summ / sumaPnf;
                       ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/IOstream.H:50:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Ostream.H:39,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/OSstream.H:39,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/messageStream.H:216,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/error.H:51,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/HashTableI.H:26,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/HashTable.H:560,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/objectRegistry.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/polyMesh.H:44,
                 from fvMesh/fvMesh.H:50,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/fileName.H:243:10: note: candidate: Foam::fileName Foam::operator/(const Foam::string&, const Foam::string&)
 fileName operator/(const string&, const string&);
          ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/fileName.H:243:10: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const Foam::string&’
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/zero.H:101:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/UList.H:49,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/List.H:43,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/HashTable.C:30,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/HashTable.H:566,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/objectRegistry.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/polyMesh.H:44,
                 from fvMesh/fvMesh.H:50,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/zeroI.H:87:13: note: candidate: template<class Type> Foam::zero Foam::operator/(const Foam::zero&, const Type&)
 inline zero operator/(const zero&, const Type& t)
             ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/zeroI.H:87:13: note:   template argument deduction/substitution failed:
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const Foam::zero&’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/VectorSpace.H:230:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Vector.H:44,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/vector.H:39,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/point.H:35,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/pointField.H:35,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from fvMesh/fvMesh.H:50,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/VectorSpaceI.H:698:13: note: candidate: template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::operator/(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, Foam::scalar)
 inline Form operator/
             ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/VectorSpaceI.H:698:13: note:   template argument deduction/substitution failed:
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from fvMesh/fvMesh.H:50,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.C:264:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::UList<T>&, const Foam::UList<double>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.C:264:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘sumaPnf’ (type ‘Foam::vector {aka Foam::Vector<double>}’) to type ‘const Foam::UList<double>&’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from fvMesh/fvMesh.H:50,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.C:276:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::UList<T>&, const Foam::tmp<Foam::Field<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.C:276:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘sumaPnf’ (type ‘Foam::vector {aka Foam::Vector<double>}’) to type ‘const Foam::tmp<Foam::Field<double> >&’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from fvMesh/fvMesh.H:50,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.C:289:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::tmp<Foam::Field<Type> >&, const Foam::UList<double>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.C:289:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from fvMesh/fvMesh.H:50,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.C:302:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.C:302:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from fvMesh/fvMesh.H:50,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.C:372:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::UList<T>&, const scalar&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:631:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.C:372:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:631:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘sumaPnf’ (type ‘Foam::vector {aka Foam::Vector<double>}’) to type ‘const scalar& {aka const double&}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from fvMesh/fvMesh.H:50,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.C:384:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::tmp<Foam::Field<Type> >&, const scalar&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:631:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.C:384:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.C:631:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::Field<Type> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarField.H:42:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctions.H:360,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Field.H:405,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from fvMesh/fvMesh.H:50,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const Foam::UList<double>&, const Foam::UList<double>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const Foam::UList<double>&, const Foam::tmp<Foam::Field<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const Foam::tmp<Foam::Field<double> >&, const Foam::UList<double>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const Foam::tmp<Foam::Field<double> >&, const Foam::tmp<Foam::Field<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const scalar&, const Foam::UList<double>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarField.H:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const scalar& {aka const double&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarField.H:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const scalar&, const Foam::tmp<Foam::Field<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarField.H:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const scalar& {aka const double&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarField.H:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/SphericalTensor.H:122:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensor.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/fieldTypes.H:36,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/flipOp.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/mapDistributeBaseTemplates.C:29,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/mapDistributeBase.H:489,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldMapper.H:35,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Field.C:26,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from fvMesh/fvMesh.H:50,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/SphericalTensorI.H:147:1: note: candidate: template<class Cmpt> Foam::SphericalTensor<Cmpt> Foam::operator/(Foam::scalar, const Foam::SphericalTensor<Cmpt>&)
 operator/(const scalar s, const SphericalTensor<Cmpt>& st)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/SphericalTensorI.H:147:1: note:   template argument deduction/substitution failed:
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘Foam::scalar {aka double}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Tensor.H:231:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/SymmTensorI.H:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/SymmTensor.H:155,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/symmTensor.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/fieldTypes.H:37,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/flipOp.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/mapDistributeBaseTemplates.C:29,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/mapDistributeBase.H:489,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldMapper.H:35,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Field.C:26,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from fvMesh/fvMesh.H:50,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/TensorI.H:491:1: note: candidate: template<class Cmpt> typename Foam::innerProduct<Foam::Vector<Cmpt>, Foam::Tensor<Cmpt> >::type Foam::operator/(const Foam::Vector<Cmpt>&, const Foam::Tensor<Cmpt>&)
 operator/(const Vector<Cmpt>& v, const Tensor<Cmpt>& t)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/TensorI.H:491:1: note:   template argument deduction/substitution failed:
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::Vector<Cmpt>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorField.H:42:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveFields.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from fvMesh/fvMesh.H:50,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::UList<double>&, const Foam::UList<Foam::SphericalTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::UList<double>&, const Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::Field<double> >&, const Foam::UList<Foam::SphericalTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::Field<double> >&, const Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const scalar&, const Foam::UList<Foam::SphericalTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const scalar& {aka const double&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const scalar&, const Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const scalar& {aka const double&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::UList<double>&, const sphericalTensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::Field<double> >&, const sphericalTensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:45:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveFields.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from fvMesh/fvMesh.H:50,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const Foam::UList<Foam::Tensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note:   no known conversion for argument 2 from ‘Foam::vector {aka Foam::Vector<double>}’ to ‘const Foam::UList<Foam::Tensor<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const Foam::tmp<Foam::Field<Foam::Tensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note:   no known conversion for argument 2 from ‘Foam::vector {aka Foam::Vector<double>}’ to ‘const Foam::tmp<Foam::Field<Foam::Tensor<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const Foam::UList<Foam::Tensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note:   no known conversion for argument 2 from ‘Foam::vector {aka Foam::Vector<double>}’ to ‘const Foam::UList<Foam::Tensor<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const Foam::tmp<Foam::Field<Foam::Tensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note:   no known conversion for argument 2 from ‘Foam::vector {aka Foam::Vector<double>}’ to ‘const Foam::tmp<Foam::Field<Foam::Tensor<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::UList<Foam::Tensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const vector& {aka const Foam::Vector<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::tmp<Foam::Field<Foam::Tensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const vector& {aka const Foam::Vector<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const tensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note:   no known conversion for argument 2 from ‘Foam::vector {aka Foam::Vector<double>}’ to ‘const tensor& {aka const Foam::Tensor<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const tensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note:   no known conversion for argument 2 from ‘Foam::vector {aka Foam::Vector<double>}’ to ‘const tensor& {aka const Foam::Tensor<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dimensionedType.H:40:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/TimeState.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/data.H:117,
                 from fvMesh/fvMesh.H:57,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dimensionSet.H:401:29: note: candidate: Foam::dimensionSet Foam::operator/(const Foam::dimensionSet&, const Foam::dimensionSet&)
         friend dimensionSet operator/
                             ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dimensionSet.H:401:29: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const Foam::dimensionSet&’
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Matrix.H:383:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/RectangularMatrix.H:41,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarMatrices.H:43,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dimensionSets.H:39,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dimensionSet.H:439,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dimensionedType.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/TimeState.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/data.H:117,
                 from fvMesh/fvMesh.H:57,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Matrix.C:576:6: note: candidate: template<class Form, class Type> Form Foam::operator/(const Foam::Matrix<Form, Type>&, Foam::scalar)
 Form Foam::operator/(const Matrix<Form, Type>& M, const scalar s)
      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Matrix.C:576:6: note:   template argument deduction/substitution failed:
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::Matrix<Form, Type>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dimensionedType.H:340:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/TimeState.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/data.H:117,
                 from fvMesh/fvMesh.H:57,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dimensionedType.C:717:25: note: candidate: template<class Type> Foam::dimensioned<Type> Foam::operator/(const Foam::dimensioned<Type>&, const Foam::dimensioned<double>&)
 Foam::dimensioned<Type> Foam::operator/
                         ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dimensionedType.C:717:25: note:   template argument deduction/substitution failed:
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::dimensioned<Type>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/TimeState.H:38:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/data.H:117,
                 from fvMesh/fvMesh.H:57,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dimensionedScalar.H:56:19: note: candidate: Foam::dimensionedScalar Foam::operator/(Foam::scalar, const dimensionedScalar&)
 dimensionedScalar operator/(const scalar, const dimensionedScalar&);
                   ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/dimensionedScalar.H:56:19: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘Foam::scalar {aka double}’
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from fvMesh/fvMesh.H:58,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from fvMesh/fvMesh.H:58,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from fvMesh/fvMesh.H:58,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from fvMesh/fvMesh.H:58,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from fvMesh/fvMesh.H:58,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:534:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:534:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const Foam::dimensioned<double>&’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from fvMesh/fvMesh.H:58,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:561:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const scalar&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:561:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const scalar& {aka const double&}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from fvMesh/fvMesh.H:58,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:572:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:572:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const Foam::dimensioned<double>&’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from fvMesh/fvMesh.H:58,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:598:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const scalar&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:598:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const scalar& {aka const double&}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from fvMesh/fvMesh.H:58,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from fvMesh/fvMesh.H:58,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from fvMesh/fvMesh.H:58,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from fvMesh/fvMesh.H:58,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from fvMesh/fvMesh.H:58,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:611:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::dimensioned<double>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:611:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from fvMesh/fvMesh.H:58,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:638:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::DimensionedField<Type, GeoMesh>&, const scalar&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:638:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::DimensionedField<Type, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from fvMesh/fvMesh.H:58,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::dimensioned<double>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from fvMesh/fvMesh.H:58,
                 from fvMesh/fvMeshGeometry.C:26:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:675:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const scalar&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:675:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const Foam::FieldField<Field, double>&, const Foam::FieldField<Field, double>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::FieldField<Field, double>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const Foam::FieldField<Field, double>&, const Foam::tmp<Foam::FieldField<Field, double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::FieldField<Field, double>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, double> >&, const Foam::FieldField<Field, double>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, double> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, double> >&, const Foam::tmp<Foam::FieldField<Field, double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, double> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const scalar&, const Foam::FieldField<Field, double>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const scalar& {aka const double&}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const scalar&, const Foam::tmp<Foam::FieldField<Field, double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/scalarFieldField.C:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const scalar& {aka const double&}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, double>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::FieldField<Field, Type>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::FieldField<Field, Type>&, const Foam::tmp<Foam::FieldField<Field, double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::FieldField<Field, Type>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::FieldField<Field, double>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::tmp<Foam::FieldField<Field, double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::FieldField<Field, Type>&, const scalar&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:619:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:619:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::FieldField<Field, Type>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Type> >&, const scalar&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:619:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:619:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Type> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DiagTensor.H:115:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensor.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:39,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/coupledPolyPatch.H:41,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/processorPolyPatch.H:42,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/processorTopology.H:30,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/globalMeshData.H:84,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DiagTensorI.H:263:1: note: candidate: template<class Cmpt> Foam::DiagTensor<Cmpt> Foam::operator/(Foam::scalar, const Foam::DiagTensor<Cmpt>&)
 operator/(const scalar s, const DiagTensor<Cmpt>& dt)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DiagTensorI.H:263:1: note:   template argument deduction/substitution failed:
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘Foam::scalar {aka double}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DiagTensor.H:115:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensor.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:39,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/coupledPolyPatch.H:41,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/processorPolyPatch.H:42,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/processorTopology.H:30,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/globalMeshData.H:84,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DiagTensorI.H:272:1: note: candidate: template<class Cmpt> Foam::Vector<Cmpt> Foam::operator/(Foam::Vector<Cmpt>, const Foam::DiagTensor<Cmpt>&)
 operator/(const Vector<Cmpt> v, const DiagTensor<Cmpt>& dt)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DiagTensorI.H:272:1: note:   template argument deduction/substitution failed:
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::Field<Foam::Vector<double> >’ is not derived from ‘Foam::Vector<Cmpt>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:42:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/coupledPolyPatch.H:41,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/processorPolyPatch.H:42,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/processorTopology.H:30,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/globalMeshData.H:84,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const Foam::UList<Foam::DiagTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note:   no known conversion for argument 2 from ‘Foam::vector {aka Foam::Vector<double>}’ to ‘const Foam::UList<Foam::DiagTensor<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note:   no known conversion for argument 2 from ‘Foam::vector {aka Foam::Vector<double>}’ to ‘const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const Foam::UList<Foam::DiagTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note:   no known conversion for argument 2 from ‘Foam::vector {aka Foam::Vector<double>}’ to ‘const Foam::UList<Foam::DiagTensor<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note:   no known conversion for argument 2 from ‘Foam::vector {aka Foam::Vector<double>}’ to ‘const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::UList<Foam::DiagTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const vector& {aka const Foam::Vector<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const vector& {aka const Foam::Vector<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const diagTensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note:   no known conversion for argument 2 from ‘Foam::vector {aka Foam::Vector<double>}’ to ‘const diagTensor& {aka const Foam::DiagTensor<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const diagTensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note:   no known conversion for argument 2 from ‘Foam::vector {aka Foam::Vector<double>}’ to ‘const diagTensor& {aka const Foam::DiagTensor<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/quaternion.H:304:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/transformField.H:39,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/mapDistributeTemplates.C:30,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/mapDistribute.H:655,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/globalMeshDataTemplates.C:28,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/globalMeshData.H:627,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/quaternionI.H:675:25: note: candidate: Foam::quaternion Foam::operator/(const Foam::quaternion&, const Foam::quaternion&)
 inline Foam::quaternion Foam::operator/
                         ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/quaternionI.H:675:25: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const Foam::quaternion&’
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/quaternionI.H:697:25: note: candidate: Foam::quaternion Foam::operator/(const Foam::quaternion&, Foam::scalar)
 inline Foam::quaternion Foam::operator/(const quaternion& q, const scalar s)
                         ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/quaternionI.H:697:25: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const Foam::quaternion&’
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/septernion.H:206:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/transformField.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/mapDistributeTemplates.C:30,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/mapDistribute.H:655,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/globalMeshDataTemplates.C:28,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/globalMeshData.H:627,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/septernionI.H:230:25: note: candidate: Foam::septernion Foam::operator/(const Foam::septernion&, const Foam::quaternion&)
 inline Foam::septernion Foam::operator/
                         ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/septernionI.H:230:25: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const Foam::septernion&’
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/septernionI.H:254:25: note: candidate: Foam::septernion Foam::operator/(const Foam::septernion&, const Foam::septernion&)
 inline Foam::septernion Foam::operator/
                         ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/septernionI.H:254:25: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const Foam::septernion&’
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/septernionI.H:276:25: note: candidate: Foam::septernion Foam::operator/(const Foam::septernion&, Foam::scalar)
 inline Foam::septernion Foam::operator/(const septernion& tr, const scalar s)
                         ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/septernionI.H:276:25: note:   no known conversion for argument 1 from ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ to ‘const Foam::septernion&’
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<double>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const scalar&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::dimensioned<double>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const scalar&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const Foam::dimensioned<double>&’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const scalar&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const scalar& {aka const double&}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const Foam::dimensioned<double>&’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const scalar&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const scalar& {aka const double&}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const Foam::dimensioned<double>&’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const scalar&, const Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const scalar& {aka const double&}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const Foam::dimensioned<double>&’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const scalar&, const Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const scalar& {aka const double&}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const Foam::dimensioned<Foam::SphericalTensor<double> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const sphericalTensor&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const Foam::dimensioned<Foam::SphericalTensor<double> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const sphericalTensor&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:534:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:534:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const Foam::dimensioned<double>&’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:561:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const scalar&, const Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:561:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const scalar& {aka const double&}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:572:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:572:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const Foam::dimensioned<double>&’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:598:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const scalar&, const Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:598:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const scalar& {aka const double&}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:611:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const Foam::dimensioned<Foam::SphericalTensor<double> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:611:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:638:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const sphericalTensor&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:638:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const Foam::dimensioned<Foam::SphericalTensor<double> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:675:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const sphericalTensor&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:675:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>&, const Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >&, const Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<Foam::Vector<double> >&, const Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const Foam::dimensioned<Foam::Vector<double> >&’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const vector&, const Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const vector& {aka const Foam::Vector<double>&}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<Foam::Vector<double> >&, const Foam::tmp<Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const Foam::dimensioned<Foam::Vector<double> >&’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const vector&, const Foam::tmp<Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const vector& {aka const Foam::Vector<double>&}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>&, const Foam::dimensioned<Foam::Tensor<double> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>&, const tensor&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >&, const Foam::dimensioned<Foam::Tensor<double> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >&, const tensor&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::FieldField<Field, double>&, const Foam::FieldField<Field, Foam::SphericalTensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::FieldField<Field, double>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::FieldField<Field, double>&, const Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::FieldField<Field, double>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, double> >&, const Foam::FieldField<Field, Foam::SphericalTensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, double> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, double> >&, const Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, double> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const scalar&, const Foam::FieldField<Field, Foam::SphericalTensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const scalar& {aka const double&}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const scalar&, const Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const scalar& {aka const double&}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::FieldField<Field, double>&, const sphericalTensor&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::FieldField<Field, double>’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, double> >&, const sphericalTensor&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, double> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::FieldField<Field, Foam::Vector<double> >&, const Foam::FieldField<Field, Foam::Tensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::FieldField<Field, Foam::Vector<double> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::FieldField<Field, Foam::Vector<double> >&, const Foam::tmp<Foam::FieldField<Field, Foam::Tensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::FieldField<Field, Foam::Vector<double> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >&, const Foam::FieldField<Field, Foam::Tensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >&, const Foam::tmp<Foam::FieldField<Field, Foam::Tensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::FieldField<Field, Foam::Tensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const vector& {aka const Foam::Vector<double>&}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::tmp<Foam::FieldField<Field, Foam::Tensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   cannot convert ‘summ’ (type ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’) to type ‘const vector& {aka const Foam::Vector<double>&}’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::FieldField<Field, Foam::Vector<double> >&, const tensor&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::FieldField<Field, Foam::Vector<double> >’
         result = summ / sumaPnf;
                         ^
In file included from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from fvMesh/fvMeshGeometry.C:28:
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >&, const tensor&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/edgardo/OpenFOAM/OpenFOAM-5.0/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
In file included from lnInclude/cyclicAMIFvPatchField.H:245:0,
                 from lnInclude/cyclicAMIFvPatchFields.H:29,
                 from fvMesh/fvMeshGeometry.C:34:
lnInclude/cyclicAMIFvPatchField.C:280:25: note:   ‘Foam::vectorField {aka Foam::Field<Foam::Vector<double> >}’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >’
         result = summ / sumaPnf;
                         ^
make: *** [/home/edgardo/OpenFOAM/OpenFOAM-5.0/platforms/linux64GccDPInt32Debug/src/finiteVolume/fvMesh/fvMeshGeometry.o] Error 1
